<?php
/**
 * @var \App\Entity\User $user
 * @var array $nowplaying
 * @var \App\Entity\Station $station
 * @var \App\Http\Router $router
 * @var \App\Acl $acl
 * @var \App\Radio\Frontend\AbstractFrontend $frontend
 * @var \App\Radio\Backend\AbstractBackend $backend
 * @var int $num_songs
 * @var int $num_playlists
 * @var string $csrf
 */

$frontendConfig = $station->getFrontendConfig();

$props = [
    // Common
    'backendType' => $station->getBackendType(),
    'frontendType' => $station->getFrontendType(),
    'stationSupportsRequests' => $backend::supportsRequests(),
    'stationSupportsStreamers' => $backend::supportsStreamers(),
    'enableRequests' => $station->getEnableRequests(),
    'enableStreamers' => $station->getEnableStreamers(),
    'enablePublicPage' => $station->getEnablePublicPage(),
    'enableOnDemand' => $station->getEnableOnDemand(),
    'profileApiUri' => $router->fromHere('api:stations:profile'),

    // ACL
    'userCanManageMedia' => $acl->userAllowed($user, \App\Acl::STATION_MEDIA, $station->getId()),
    'userCanManageBroadcasting' => $acl->userAllowed($user, \App\Acl::STATION_BROADCASTING, $station->getId()),
    'userCanManageProfile' => $acl->userAllowed($user, \App\Acl::STATION_PROFILE, $station->getId()),
    'userCanManageReports' => $acl->userAllowed($user, \App\Acl::STATION_REPORTS, $station->getId()),
    'userCanManageStreamers' => $acl->userAllowed($user, \App\Acl::STATION_STREAMERS, $station->getId()),

    // Streams
    'playlistPlsUri' => $router->fromHere('public:playlist', ['format' => 'pls']),
    'playlistM3uUri' => $router->fromHere('public:playlist', ['format' => 'm3u']),

    // Header
    'stationName' => $station->getName(),
    'stationDescription' => $station->getDescription(),
    'manageProfileUri' => $router->fromHere('stations:profile:edit'),

    // Now Playing
    'backendSkipSongUri' => $router->fromHere('api:stations:backend', ['do' => 'skip']),
    'backendDisconnectStreamerUri' => $router->fromHere('api:stations:backend', ['do' => 'disconnect']),

    // Requests
    'requestsViewUri' => $router->fromHere('stations:reports:requests'),
    'requestsToggleUri' => $router->fromHere('stations:profile:toggle', ['feature' => 'requests', 'csrf' => $csrf]),

    // Streamers
    'streamersViewUri' => $router->fromHere('stations:streamers:index'),
    'streamersToggleUri' => $router->fromHere('stations:profile:toggle', ['feature' => 'streamers', 'csrf' => $csrf]),

    // Public Pages
    'publicPageUri' => (string)$router->named('public:index', ['station_id' => $station->getShortName()], [], true),
    'publicPageEmbedUri' => (string)$router->named('public:index',
        ['station_id' => $station->getShortName(), 'embed' => 'embed'], [], true),
    'publicWebDjUri' => (string)$router->named('public:dj', ['station_id' => $station->getShortName()], [], true),
    'publicOnDemandUri' => (string)$router->named('public:ondemand', ['station_id' => $station->getShortName()], [],
        true),
    'publicOnDemandEmbedUri' => (string)$router->named('public:ondemand',
        ['station_id' => $station->getShortName(), 'embed' => 'embed'], [], true),
    'publicRequestEmbedUri' => (string)$router->named('public:embedrequests',
        ['station_id' => $station->getShortName()], [], true),
    'togglePublicPageUri' => $router->fromHere('stations:profile:toggle',
        ['feature' => 'public', 'csrf' => $csrf]),

    // Frontend
    'frontendAdminUri' => (string)$frontend->getAdminUrl($station),
    'frontendAdminPassword' => $frontendConfig->getAdminPassword(),
    'frontendSourcePassword' => $frontendConfig->getSourcePassword(),
    'frontendRelayPassword' => $frontendConfig->getRelayPassword(),
    'frontendRestartUri' => $router->fromHere('api:stations:frontend', ['do' => 'restart']),
    'frontendStartUri' => $router->fromHere('api:stations:frontend', ['do' => 'start']),
    'frontendStopUri' => $router->fromHere('api:stations:frontend', ['do' => 'stop']),

    // Backend
    'numSongs' => (int)$num_songs,
    'numPlaylists' => (int)$num_playlists,
    'manageMediaUri' => $router->fromHere('stations:files:index'),
    'managePlaylistsUri' => $router->fromHere('stations:playlists:index'),
    'backendRestartUri' => $router->fromHere('api:stations:backend', ['do' => 'restart']),
    'backendStartUri' => $router->fromHere('api:stations:backend', ['do' => 'start']),
    'backendStopUri' => $router->fromHere('api:stations:backend', ['do' => 'stop']),
];
?>

$(function () {
    let profile = new Vue({
        el: '#profile',
        render: function (createElement) {
            return createElement(StationProfile.default, {
                props: <?=json_encode($props) ?>
            });
        }
    });
});
